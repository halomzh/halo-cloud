spring:
  cloud:
    # Spring Cloud Gateway 配置项，对应 GatewayProperties 类
    gateway:
      # 路由配置项，对应 RouteDefinition 数组
      routes:
        - id: baiduSearch # 路由的编号
          uri: http://www.baidu.com # 路由到的目标地址
          predicates: # 断言，作为路由的匹配条件，对应 RouteDefinition 数组
            - Path=/search
          filters:
            - StripPrefix=1
        - id: oschina # 路由的编号
          uri: https://www.oschina.net # 路由的目标地址
          predicates: # 断言，作为路由的匹配条件，对应 RouteDefinition 数组
            - Path=/oschina
          filters: # 过滤器，对请求进行拦截，实现自定义的功能，对应 FilterDefinition 数组
            - StripPrefix=1
      # 与 Spring Cloud 注册中心的集成，对应 DiscoveryLocatorProperties 类
      discovery:
        locator:
          enabled: true # 是否开启，默认为 false 关闭
          url-expression: "'lb://' + serviceId" # 路由的目标地址的表达式，默认为 "'lb://' + serviceId"
      # 默认过滤器，对应 FilterDefinition 数组
      default-filters:
        - name: Auth
          args:
            token-header-name: access-token
            user-id-header-name: user-id
            ignore-check-list:
              - /search

    sentinel:
      eager: true # 是否饥饿加载。默认为 false 关闭
      transport:
        dashboard: 10.10.71.98:8858
      # Sentinel 对 Spring Cloud Gateway 的专属配置项，对应 SentinelGatewayProperties 类
      scg:
        order: -2147483648 # 过滤器顺序，默认为 -2147483648 最高优先级
        fallback:
          mode: # fallback 模式，目前有三种：response、redirect、空，选择空时，使用 Sentinel 定义的 BlockRequestHandler 处理 fallback 的情况
          # response 模式
          response-status: 429 # 响应状态码，默认为 429
          response-body: 你被 block 了... # 响应内容，默认为空
          content-type: application/json # 内容类型，默认为 application/json
          # 专属 redirect 模式
          redirect: http://www.baidu.com